stages:
  - build
  - test

variables:
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"
  POSTGRES_DB: testdb
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: postgres
  SPRING_DATASOURCE_URL: jdbc:postgresql://todo-postgres:5432/${POSTGRES_DB}
  SPRING_REDIS_HOST: todo-redis
  SPRING_PROFILES_ACTIVE: test
  DOCKER_HOST: tcp://docker:2375
  DOCKER_TLS_CERTDIR: ""
  DOCKER_DRIVER: overlay2
  TESTCONTAINERS_RYUK_DISABLED: "true"

services:
  - name: docker:24.0-dind
    alias: docker

cache:
  paths:
    - .m2/repository/
    - target/

build:
  stage: build
  image: maven:3.9-eclipse-temurin-21
  script:
    - mvn clean package -DskipTests
  artifacts:
    paths:
      - target/*.jar
  only:
    - merge_requests
    - dev
  tags:
    - docker
    - java


test:
  stage: test
  image: docker:24.0
  before_script:
    - unset DOCKER_HOST
    - docker login $CI_REGISTRY -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD
    - apk add --no-cache curl bash openjdk21 maven git
    - docker-compose -f docker-compose.test.yml up -d
    - echo "Check" && docker ps
    - |
    - if [ "$(docker ps -q | wc -l)" -eq 0 ]; then
    - echo "Executed"
    - exit 1
    - fi
  script:
    - unset DOCKER_HOST
    - docker login $CI_REGISTRY -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD
    - docker compose -f docker-compose.test.yml up -d
#    - docker run --rm --network container:todo-postgres
#      -e SPRING_DATASOURCE_URL=$SPRING_DATASOURCE_URL
#      -e SPRING_REDIS_HOST=$SPRING_REDIS_HOST
#      -e POSTGRES_USER=$POSTGRES_USER
#      -e POSTGRES_PASSWORD=$POSTGRES_PASSWORD
#      maven:3.9-eclipse-temurin-21
    - mvn test -Dspring.profiles.active=test
  after_script:
    - unset DOCKER_HOST
    - docker login $CI_REGISTRY -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD
    - docker compose -f docker-compose.test.yml down -v
  only:
    - merge_requests
    - dev
  tags:
    - docker
    - java